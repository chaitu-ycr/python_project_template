name: publish-release-build

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  publish-release-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          python -m poetry build
          python -m poetry lock
          python -m poetry install

      - name: Read version from pyproject.toml
        id: get_version
        run: echo "::set-output name=VERSION::$(poetry version --short)"

      - name: Create tag
        id: create_tag
        run: |
          git tag v${{ steps.get_version.outputs.VERSION }}
          git push origin v${{ steps.get_version.outputs.VERSION }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: true

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

    #   - name: Publish to PyPi
    #     env:
    #       POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
    #     run: python -m poetry publish
