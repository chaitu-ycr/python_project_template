name: lint_and_test

on:
  push:
  workflow_dispatch:

jobs:
  lint:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout

      - name: Set up Python
        uses: actions/setup-python
        with:
          python-version: "3.x"

      - name: Cache dependencies
        uses: actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install

      - name: Run pylint
        run: poetry run pylint python_project_template

  test:
    runs-on: windows-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout

      - name: Set up Python
        uses: actions/setup-python
        with:
          python-version: "3.x"

      - name: Cache dependencies
        uses: actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install

      - name: Run pytest
        run: poetry run pytest

  matrix:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout

      - name: Set up Python
        uses: actions/setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install

      - name: Run pytest
        run: poetry run pytest

  artifacts:
    runs-on: windows-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout

      - name: Set up Python
        uses: actions/setup-python
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install

      - name: Run pytest
        run: poetry run pytest --junitxml=result.xml

      - name: Upload test results
        uses: actions/upload-artifact
        with:
          name: test-results
          path: result.xml
